{"version":3,"sources":["components/MovieList.js","components/MovieListHeading.js","components/AddFavourites.js","components/RemoveFavourites.js","store/action.js","components/MovieDetails.js","components/Details.js","App.js","store/reducers.js","api.js","sagas/saga.js","index.js"],"names":["MovieList","props","FavouriteComponent","favouriteComponent","DetailComponent","detailComponent","undefined","movies","map","movie","index","className","src","poster_path","alt","onClick","handleFavouritesClick","handleMovieDetailClick","id","MovieListHeading","style","textAlign","heading","AddFavourite","width","height","viewBox","class","fill","xmlns","fillRule","d","RemoveFavourites","fill-rule","recieveApiData","data","type","MovieDetails","useState","play","setPlay","release_date","split","reverse","join","console","log","backgroundImage","backdrop_path","backgroundSize","marginTop","cursor","marginLeft","color","opacity","marginRight","original_title","original_language","vote_average","vote_count","autoPlay","controls","overview","Detail","connect","state","requestApiData","results","favourites","setFavourites","currentMovie","setCurrentMovie","showMovie","setShowMovie","showFavorites","setShowFavorites","useEffect","movieFavourites","JSON","parse","localStorage","getItem","viewMovieInfo","filteredMovie","filter","newCurrentMovie","length","saveToLocalStorage","items","setItem","stringify","newFavouriteList","AddFavourites","favourite","combineReducers","API_URL","fetchData","a","fetch","response","json","getApiData","watchDataFetch","action","call","put","takeLatest","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAsCgBA,EAnCE,SAACC,GAGlB,IAAMC,EAAqBD,EAAME,mBAC3BC,EAAkBH,EAAMI,gBAE9B,YAAyBC,IAAjBL,EAAMM,OAAuB,0CACpC,mCACEN,EAAMM,OAAOC,KAAI,SAACC,EAAOC,GAAR,OACjB,sBAAoBC,UAAU,oDAA9B,UACC,qBAAKC,IAAG,wCAAmCH,EAAMI,aAAeC,IAAI,UACpE,qBACCC,QAAS,kBAAMd,EAAMe,sBAAsBP,IAC3CE,UAAU,2DAFX,SAIC,cAACT,EAAD,MAED,qBACCa,QAAS,kBAAMd,EAAMgB,uBAAuBR,EAAMS,KAClDP,UAAU,4DAFX,SAIC,cAACP,EAAD,QAZQK,EAAMS,UCFLC,EARU,SAAClB,GACzB,OACC,qBAAKU,UAAU,MAAf,SACC,oBAAIS,MAAO,CAACC,UAAU,UAAtB,SAAkCpB,EAAMqB,aCkB5BC,EArBM,WACpB,OACC,qCACC,sBAAMZ,UAAU,OAAhB,+BACA,qBACCa,MAAM,MACNC,OAAO,MACPC,QAAQ,YACRC,MAAM,mBACNC,KAAK,MACLC,MAAM,6BANP,SAQC,sBACCC,SAAS,UACTC,EAAE,mFCWQC,EAzBU,WACxB,OACC,qCACC,sBAAMrB,UAAU,OAAhB,oCACA,sBACCa,MAAM,MACNC,OAAO,MACPC,QAAQ,YACRC,MAAM,iBACNC,KAAK,eACLC,MAAM,6BANP,UAQC,sBACCI,YAAU,UACVF,EAAE,oJAEH,sBACCE,YAAU,UACVF,EAAE,2MCjBMG,EAAiB,SAAAC,GAAI,MAAI,CAACC,KAAM,mBAAoBD,S,QCiDlDE,EAhDM,SAACpC,GAAW,IAAD,EAEJqC,oBAAS,GAFL,mBAErBC,EAFqB,KAEfC,EAFe,KAGtB/B,EAAQR,EAAMQ,MAGdgC,EAFOhC,EAAMgC,aAEOC,MAAM,KAAKC,UAAUC,KAAK,KAEpD,OADAC,QAAQC,IAAIL,GACJ,sBAAK9B,UAAU,sBACnBS,MAAO,CAAE2B,gBAAgB,OAAD,mDAA8CtC,EAAMuC,eAApD,KAAwEC,eAAgB,QAASC,UAAW,IADhI,UAEJ,sBAAKnC,QAASd,EAAMgB,uBAAwBG,MAAO,CAAE+B,OAAQ,WAA7D,UAA2E,qBAAK/B,MAAO,CAAEI,MAAO,GAAIC,OAAQ,IACxGb,IAAI,yDACJ,sBAAMQ,MAAO,CAAEgC,WAAY,GAAIC,MAAO,SAAtC,qBAFJ,OAGA,8BACI,sBAAK1C,UAAU,uCAAf,UACI,qBAAKC,IAAG,wCAAmCH,EAAMI,aAAeC,IAAI,eAAeM,MAAO,CAAEI,MAAO,IAAKC,OAAQ,IAAK6B,QAAS,EAAGC,YAAa,MAE9I,gCACI,qBAAK5C,UAAU,OAAf,SAAsB,6BAAKF,EAAM+C,mBACjC,sBAAK7C,UAAU,OAAf,UAAsB,4BAAI8B,IAA1B,QAAgD,6CAAgBhC,EAAMgD,wBACtE,sBAAK9C,UAAU,OAAf,UAAsB,+CAAyC,GAAtBF,EAAMiD,aAAzB,SAAtB,MACO,gDAAmBjD,EAAMkD,cADhC,MAEO,oBAAG5C,QAAS,WAAQyB,GAASD,IAASnB,MAAO,CAAE+B,OAAQ,WAAvD,UACC,qBAAKvC,IAAI,+DAA+DQ,MAAO,CAAEI,MAAO,GAAIC,OAAQ,MADrG,kBAENc,GAAQ,qCAAO,cAAC,IAAD,CACZ3B,IAAI,yDACJgD,UAAU,EACVC,UAAU,EACVrC,MAAM,OACNC,OAAO,YAIX,sBAAKd,UAAU,OAAf,UAAsB,0CAClB,sBAAMA,UAAU,OAAhB,SAAwBF,EAAMqD,0BC3BvCC,EATA,WACd,OACC,mCACC,sBAAMpD,UAAU,OAAhB,8BC6GYqD,eALS,SAAAC,GAEvB,OADApB,QAAQC,IAAImB,GACL,CAAE1D,OAAQ0D,EAAM9B,QAGgB,CAAE+B,eHhHZ,iBAAM,CAAC9B,KAAM,sBGgH5B4B,EAlGH,SAAC/D,GACZ,IAAMM,EAASN,EAAMM,OAAO4D,QADN,EAEc7B,mBAAS,IAFvB,mBAEf8B,EAFe,KAEHC,EAFG,OAGkB/B,mBAAS,MAH3B,mBAGfgC,EAHe,KAGDC,EAHC,OAISjC,oBAAS,GAJlB,mBAIfkC,EAJe,KAILC,EAJK,OAKoBnC,oBAAS,GAL7B,mBAKfoC,EALe,KAKAC,EALA,KAQtBC,qBAAU,WACT3E,EAAMiE,iBACNrB,QAAQC,IAAI7C,EAAMM,QAClB,IAAMsE,EAAkBC,KAAKC,MAC5BC,aAAaC,QAAQ,+BAGlBJ,GACHR,EAAcQ,KAEb,IAGH,IAAMK,EAAgB,SAAChE,GAEtB,IAAMiE,EAAgB5E,EAAO6E,QAAO,SAAA3E,GAAK,OAAIA,EAAMS,IAAMA,KACnDmE,EAAkBF,EAAcG,OAAS,EAAIH,EAAc,GAAK,KACtEZ,EAAgBc,IAKXE,EAAqB,SAACC,GAC3BR,aAAaS,QAAQ,6BAA8BX,KAAKY,UAAUF,KAkBnE,OAASlB,EAoCR,8BAAK,cAAC,EAAD,CACJ7D,MAAO6D,EACPrD,uBA3DqB,kBAAMsD,EAAgB,WAuB5C,sBAAK5D,UAAU,4BAAf,UACC,qBAAIgB,MAAM,4BAAV,UACD,oBAAIA,MAAM,oBAAoBZ,QAAS,WAAK0D,GAAa,GAAME,GAAiB,IAAhF,oBACA,oBAAIhD,MAAM,oBAAoBZ,QAAS,WAAK0D,GAAa,GAAOE,GAAiB,IAAjF,2BAKCH,GAAa,qBAAM7D,UAAU,0CAAhB,SACb,cAAC,EAAD,CAAkBW,QAAQ,aAEzBkD,GAAc,qBAAKtD,GAAG,SAASP,UAAU,MAA3B,SACd,cAAC,EAAD,CACCJ,OAAQA,EACRS,sBA/BsB,SAACP,GAC1B,IAAMkF,EAAgB,sBAAOvB,GAAP,CAAmB3D,IACzC4D,EAAcsB,GACdJ,EAAmBI,IA6BhB1E,uBAAwBiE,EACxB/E,mBAAoByF,EACpBvF,gBAAiB0D,MAGlBW,GAAgB,qBAAK/D,UAAU,0CAAf,SAChB,cAAC,EAAD,CAAkBW,QAAQ,iBAE1BoD,GAAgB,qBAAKxD,GAAG,YAAYP,UAAU,MAA9B,SAChB,cAAC,EAAD,CACCJ,OAAQ6D,EACRpD,sBArCyB,SAACP,GAC7B,IAAMkF,EAAmBvB,EAAWgB,QACnC,SAACS,GAAD,OAAeA,EAAU3E,KAAOT,EAAMS,MAGvCmD,EAAcsB,GACdJ,EAAmBI,IAgChB1E,uBAAwBiE,EACxB/E,mBAAoB6B,EACpB3B,gBAAiB0D,YCnFP+B,cAAgB,CAC3B3D,KAXS,WAA2B,IAA1B8B,EAAyB,uDAAnB,GAAmB,yCAAf7B,EAAe,EAAfA,KAAMD,EAAS,EAATA,KAC1B,OAAQC,GACJ,IAAK,mBAED,OADAS,QAAQC,IAAI,OACLX,EACX,QACI,OAAO8B,M,gCCJb8B,EAAO,UADG,+BACH,mDAFC,4CAGDC,EAAS,uCAAG,8BAAAC,EAAA,+EAEGC,MAAMH,GAFT,cAEdI,EAFc,gBAGFA,EAASC,OAHP,cAGfjE,EAHe,yBAIbA,GAJa,kCAMpBU,QAAQC,IAAR,MANoB,0DAAH,qD,WCAZuD,G,WAUeC,GAVzB,SAAUD,EAAYE,GAAtB,uEAGiB,OAHjB,SAEQ1D,QAAQC,IAAI,QAFpB,SAGuB0D,YAAKR,GAH5B,OAII,OADM7D,EAHV,gBAIUsE,YAAIvE,EAAeC,IAJ7B,uDAMIU,QAAQC,IAAR,MANJ,qDAUe,SAAUwD,IAAV,iEACX,OADW,SACLI,YAAW,mBAAoBL,GAD1B,uCCLf,IAAMM,EAAiBC,cACjBC,EAAQC,YAAYC,EAASC,YAAgBL,IAEnDA,EAAeM,IAAIX,GAEnBY,IAASC,OACR,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACA,cAAC,IAAMO,WAAP,UACC,cAAC,EAAD,QAGDC,SAASC,eAAe,W","file":"static/js/main.ba88cde6.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nconst MovieList = (props) => {\n\n\t\n\tconst FavouriteComponent = props.favouriteComponent;\n\tconst DetailComponent = props.detailComponent\n\n\treturn (props.movies === undefined ? <h5>loading </h5>:\n\t\t<>\n\t\t\t{props.movies.map((movie, index) => (\n\t\t\t\t<div key={movie.id} className='image-container  d-flex justify-content-start m-3'>\n\t\t\t\t\t<img src={`http://image.tmdb.org/t/p/w185${movie.poster_path}`} alt='movie'></img>\n\t\t\t\t\t<div\n\t\t\t\t\t\tonClick={() => props.handleFavouritesClick(movie)}\n\t\t\t\t\t\tclassName='overlay d-flex align-items-center justify-content-center'\n\t\t\t\t\t>\n\t\t\t\t\t\t<FavouriteComponent />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tonClick={() => props.handleMovieDetailClick(movie.id)}\n\t\t\t\t\t\tclassName='overlay2 d-flex align-items-center justify-content-center'\n\t\t\t\t\t>\n\t\t\t\t\t\t<DetailComponent />\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</>\n\t);\n};\n\n// const mapStateToProps = state =>{\n// \tconsole.log(state)\n// \treturn { movies: state.data}\n// }\n\nexport default  MovieList;\n","import React from 'react';\n\nconst MovieListHeading = (props) => {\n\treturn (\n\t\t<div className='col'>\n\t\t\t<h1 style={{textAlign:'center'}}>{props.heading}</h1>\n\t\t</div>\n\t);\n};\n\nexport default MovieListHeading;\n","import React from 'react';\n\nconst AddFavourite = () => {\n\treturn (\n\t\t<>\n\t\t\t<span className='mr-2'>Add to Favourites</span>\n\t\t\t<svg\n\t\t\t\twidth='1em'\n\t\t\t\theight='1em'\n\t\t\t\tviewBox='0 0 16 16'\n\t\t\t\tclass='bi bi-heart-fill'\n\t\t\t\tfill='red'\n\t\t\t\txmlns='http://www.w3.org/2000/svg'\n\t\t\t>\n\t\t\t\t<path\n\t\t\t\t\tfillRule='evenodd'\n\t\t\t\t\td='M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z'\n\t\t\t\t/>\n\t\t\t</svg>\n\t\t</>\n\t);\n};\n\nexport default AddFavourite;\n","import React from 'react';\n\nconst RemoveFavourites = () => {\n\treturn (\n\t\t<>\n\t\t\t<span className='mr-2'>Remove from favourites</span>\n\t\t\t<svg\n\t\t\t\twidth='1em'\n\t\t\t\theight='1em'\n\t\t\t\tviewBox='0 0 16 16'\n\t\t\t\tclass='bi bi-x-square'\n\t\t\t\tfill='currentColor'\n\t\t\t\txmlns='http://www.w3.org/2000/svg'\n\t\t\t>\n\t\t\t\t<path\n\t\t\t\t\tfill-rule='evenodd'\n\t\t\t\t\td='M14 1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z'\n\t\t\t\t/>\n\t\t\t\t<path\n\t\t\t\t\tfill-rule='evenodd'\n\t\t\t\t\td='M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z'\n\t\t\t\t/>\n\t\t\t</svg>\n\t\t</>\n\t);\n};\n\nexport default RemoveFavourites;\n","\r\n\r\nexport const requestApiData = () =>({type: 'REQUEST_API_DATA'})\r\nexport const recieveApiData = data =>({type: 'RECIEVE_API_DATA', data})","import react, { useState } from 'react'\r\nimport ReactHlsPlayer from 'react-hls-player';\r\n\r\n\r\nconst MovieDetails = (props) => {\r\n\r\n    const [play, setPlay] = useState(false)\r\n    const movie = props.movie\r\n    const date = movie.release_date\r\n\r\n    const release_date = date.split('-').reverse().join('/')\r\n    console.log(release_date)\r\n    return (<div className='container jumbotron'\r\n        style={{ backgroundImage: `url(${`http://image.tmdb.org/t/p/original${movie.backdrop_path}`})`, backgroundSize: 'cover', marginTop: 10 }}>\r\n        <div onClick={props.handleMovieDetailClick} style={{ cursor: 'pointer' }} ><img style={{ width: 40, height: 40 }}\r\n            src=\"https://img.icons8.com/ios-glyphs/90/000000/left.png\" />\r\n            <span style={{ marginLeft: 10, color: 'black' }}>Go back</span> </div>\r\n        <div >\r\n            <div className='d-flex flex-direction-column details'>\r\n                <img src={`http://image.tmdb.org/t/p/w500${movie.poster_path}`} alt='movie poster' style={{ width: 300, height: 400, opacity: 1, marginRight: 20 }} />\r\n\r\n                <div >\r\n                    <div className='text'><h1>{movie.original_title}</h1></div>\r\n                    <div className='text'><p>{release_date}</p>  |  <p> Language : {movie.original_language}</p></div>\r\n                    <div className='text'><p> User Score : {(movie.vote_average) * 10}%  </p>\r\n                        |  <p> Total Votes : {movie.vote_count}</p>\r\n                        |  <p onClick={() => { setPlay(!play) }} style={{ cursor: 'pointer' }}  >\r\n                            <img src=\"https://img.icons8.com/ios-glyphs/90/000000/circled-play.png\" style={{ width: 20, height: 20 }} /> Preview </p></div>\r\n                    {play && <div>  <ReactHlsPlayer\r\n                        src=\"https://content.jwplatform.com/manifests/yp34SRmf.m3u8\"\r\n                        autoPlay={true}\r\n                        controls={true}\r\n                        width=\"100%\"\r\n                        height=\"auto\"\r\n                    />\r\n\r\n                    </div>}\r\n                    <div className='text'><h3>OverView</h3>\r\n                        <span className='text'>{movie.overview}</span></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default MovieDetails\r\n\r\n","import React from 'react';\r\n\r\nconst Detail = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<span className='mr-2'>Movie Details</span>\r\n\t\t\t\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Detail;\r\n","import React, { useState, useEffect } from 'react';\n\nimport { connect } from 'react-redux';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport MovieList from './components/MovieList';\nimport MovieListHeading from './components/MovieListHeading';\nimport SearchBox from './components/SearchBox';\nimport AddFavourites from './components/AddFavourites';\nimport RemoveFavourites from './components/RemoveFavourites';\nimport { requestApiData } from './store/action'\nimport MovieDetails from './components/MovieDetails';\nimport Detail from './components/Details';\n\n\nconst App = (props) => {\n\tconst movies = props.movies.results\n\tconst [favourites, setFavourites] = useState([]);\n\tconst [currentMovie, setCurrentMovie] = useState(null);\n\tconst [showMovie,setShowMovie]=useState(true);\n\tconst [showFavorites, setShowFavorites] = useState(false)\n\n\n\tuseEffect(() => {\n\t\tprops.requestApiData()\n\t\tconsole.log(props.movies)\n\t\tconst movieFavourites = JSON.parse(\n\t\t\tlocalStorage.getItem('react-movie-app-favourites')\n\t\t);\n\n\t\tif (movieFavourites) {\n\t\t\tsetFavourites(movieFavourites);\n\t\t}\n\t}, []);\n\n\n\tconst viewMovieInfo = (id) => {\n\n\t\tconst filteredMovie = movies.filter(movie => movie.id == id)\n\t\tconst newCurrentMovie = filteredMovie.length > 0 ? filteredMovie[0] : null\n\t\tsetCurrentMovie(newCurrentMovie)\n\t}\n\n\tconst closeMovieInfo = () => setCurrentMovie(null)\n\n\tconst saveToLocalStorage = (items) => {\n\t\tlocalStorage.setItem('react-movie-app-favourites', JSON.stringify(items));\n\t};\n\n\tconst addFavouriteMovie = (movie) => {\n\t\tconst newFavouriteList = [...favourites, movie];\n\t\tsetFavourites(newFavouriteList);\n\t\tsaveToLocalStorage(newFavouriteList);\n\t};\n\n\tconst removeFavouriteMovie = (movie) => {\n\t\tconst newFavouriteList = favourites.filter(\n\t\t\t(favourite) => favourite.id !== movie.id\n\t\t);\n\n\t\tsetFavourites(newFavouriteList);\n\t\tsaveToLocalStorage(newFavouriteList);\n\t};\n\n\treturn (!currentMovie ?\n\n\t\t<div className='container-fluid movie-app'>\n\t\t\t<ul class=\"nav justify-content-start\">\n  <li class=\"nav-item nav-link\" onClick={()=>{setShowMovie(true);setShowFavorites(false)}}>Movies</li> \n  <li class=\"nav-item nav-link\" onClick={()=>{setShowMovie(false);setShowFavorites(true)}}>\n    Favourites\n  </li>\n  \n</ul>\n\t\t{showMovie && < div className='row d-flex align-items-center mt-4 mb-4'>\n\t\t\t<MovieListHeading heading='Movies' />\n\t\t\t</div>}\n\t\t\t{showMovie && \t<div id='movies' className='row'>\n\t\t\t\t<MovieList\n\t\t\t\t\tmovies={movies}\n\t\t\t\t\thandleFavouritesClick={addFavouriteMovie}\n\t\t\t\t\thandleMovieDetailClick={viewMovieInfo}\n\t\t\t\t\tfavouriteComponent={AddFavourites}\n\t\t\t\t\tdetailComponent={Detail}\n\t\t\t\t/>\n\t\t\t</div>}\n\t\t\t{showFavorites &&<div className='row d-flex align-items-center mt-4 mb-4'>\n\t\t\t\t<MovieListHeading heading='Favourites' />\n\t\t\t</div>}\n\t\t\t{showFavorites &&<div id='favorites' className='row'>\n\t\t\t\t<MovieList\n\t\t\t\t\tmovies={favourites}\n\t\t\t\t\thandleFavouritesClick={removeFavouriteMovie}\n\t\t\t\t\thandleMovieDetailClick={viewMovieInfo}\n\t\t\t\t\tfavouriteComponent={RemoveFavourites}\n\t\t\t\t\tdetailComponent={Detail}\n\t\t\t\t/>\n\t\t\t</div>}\n\t\t</div>\n\t\t:\n\t\t<div><MovieDetails\n\t\t\tmovie={currentMovie}\n\t\t\thandleMovieDetailClick={closeMovieInfo}\n\t\t/>\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = state => {\n\tconsole.log(state)\n\treturn { movies: state.data }\n}\n\nexport default connect(mapStateToProps, { requestApiData })(App);\n","import { combineReducers } from \"redux\";\r\n\r\n\r\nconst data = (state={},{type, data}) =>{\r\n    switch (type){\r\n        case 'RECIEVE_API_DATA':\r\n            console.log('123')\r\n            return data;\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default combineReducers({\r\n    data\r\n})","\r\n//tmdb\r\n\r\nconst API_KEY='api_key=4e44d9029b1270a757cddc766a1bcb63'\r\nconst BASE_URL ='https://api.themoviedb.org/3'\r\nconst API_URL = `${BASE_URL}/discover/movie?sort_by=popularity.desc&${API_KEY}`\r\nexport const fetchData = async() => {\r\n try {\r\n     const response = await fetch(API_URL)\r\n    const data = await response.json()\r\n     return data\r\n } catch(e){\r\n     console.log(e)\r\n }\r\n}","import { call, put, takeLatest } from \"@redux-saga/core/effects\";\r\n\r\nimport { recieveApiData } from \"../store/action\";\r\nimport { fetchData } from \"../api\";\r\n\r\n\r\nfunction* getApiData (action){\r\n    try{ \r\n        console.log('saga')\r\n    const data = yield call(fetchData)\r\n    yield put(recieveApiData(data));\r\n} catch(e){\r\n    console.log(e)\r\n} \r\n}\r\n\r\nexport default function* watchDataFetch(){\r\n    yield takeLatest('REQUEST_API_DATA', getApiData )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from '@redux-saga/core';\n\n\nimport App from './App';\nimport reducers from './store/reducers' \nimport watchDataFetch from './sagas/saga';\n\nconst sagaMiddleware = createSagaMiddleware()\nconst store = createStore(reducers,applyMiddleware(sagaMiddleware))\n\nsagaMiddleware.run(watchDataFetch)\n\nReactDOM.render(\n\t<Provider store={store}>\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}